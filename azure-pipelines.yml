# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# try
trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: buildAndReleaseTask@0
  name: 'Synopsys_Intelligent_Security_Scan_Stage_IO'
  inputs:
    ioServerUrl: 'http://87e992c641da.ngrok.io'
    ioServerToken: '$(IO_SERVER_TOKEN)'
    workflowServerUrl: 'http://2839eb3c23d1.ngrok.io'
    ioManifestUrl: 'https://raw.githubusercontent.com/synopsys-sig/io-artifacts/2021.04/io-manifest.yml'
    releaseType: 'major'
    additionalWorkflowArgs: '--persona=developer --polaris.url=$(POLARIS_SERVER_URL) --polaris.token=$(POLARIS_ACCESS_TOKEN) --sensitive.package.pattern=''.*(\\+\\+\\+.*(org\\/hdivsamples\\/security)).*'''

- task: Bash@3
  name: 'Resulted_Prescription'
  inputs:
    targetType: 'inline'
    script: |
       echo "is_sast_enabled $(is_sast_enabled)"
       echo "is_sca_enabled $(is_sca_enabled)"


- task: Bash@3
  name: 'Static_Analysis_With_Polaris'
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      export POLARIS_SERVER_URL=$(POLARIS_SERVER_URL)
      export POLARIS_ACCESS_TOKEN=$(POLARIS_ACCESS_TOKEN)
      wget -q $(POLARIS_SERVER_URL)/api/tools/polaris_cli-linux64.zip
      unzip -j polaris_cli-linux64.zip -d /tmp
      /tmp/polaris analyze -w

- task: buildAndReleaseTask@0
  name: 'Synopsys_Intelligent_Security_Scan_Stage_WORKFLOW'
  inputs:
    ioServerUrl: 'http://87e992c641da.ngrok.io'
    ioServerToken: '$(IO_SERVER_TOKEN)'
    workflowServerUrl: 'http://2839eb3c23d1.ngrok.io'
    ioManifestUrl: 'https://raw.githubusercontent.com/synopsys-sig/io-artifacts/2021.04/io-manifest.yml'
    stage: 'WORKFLOW'
    additionalWorkflowArgs: '--IS_SAST_ENABLED=$(is_sast_enabled) --polaris.project.name=''sig-devsecops/github-io-sample'' --polaris.url=$(POLARIS_SERVER_URL) --polaris.token=$(POLARIS_ACCESS_TOKEN)'

- task: CopyFiles@2
  name: 'Copy_Sarif_Report'
  inputs:
    Contents: 'workflowengine-results.sarif'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  name: 'Publish_Sarif_Report'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'CodeAnalysisLogs'
    publishLocation: 'Container'